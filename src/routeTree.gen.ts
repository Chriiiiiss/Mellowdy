/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

// Import Routes

import { Route as rootRoute } from './routes/__root';
import { Route as IndexImport } from './routes/index';
import { Route as RegisterIndexImport } from './routes/register/index';
import { Route as ProfileIndexImport } from './routes/profile/index';
import { Route as PlaylistListIndexImport } from './routes/playlistList/index';
import { Route as OnboardingIndexImport } from './routes/onboarding/index';
import { Route as LoginIndexImport } from './routes/login/index';
import { Route as HomePageIndexImport } from './routes/homePage/index';
import { Route as GroupListIndexImport } from './routes/groupList/index';
import { Route as GroupDetailsOrganizationIdImport } from './routes/groupDetails/$organizationId';
import { Route as PlaylistDetailsPlaylistIdImport } from './routes/PlaylistDetails/$playlistId';

// Create/Update Routes

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any);

const RegisterIndexRoute = RegisterIndexImport.update({
  id: '/register/',
  path: '/register/',
  getParentRoute: () => rootRoute,
} as any);

const ProfileIndexRoute = ProfileIndexImport.update({
  id: '/profile/',
  path: '/profile/',
  getParentRoute: () => rootRoute,
} as any);

const PlaylistListIndexRoute = PlaylistListIndexImport.update({
  id: '/playlistList/',
  path: '/playlistList/',
  getParentRoute: () => rootRoute,
} as any);

const OnboardingIndexRoute = OnboardingIndexImport.update({
  id: '/onboarding/',
  path: '/onboarding/',
  getParentRoute: () => rootRoute,
} as any);

const LoginIndexRoute = LoginIndexImport.update({
  id: '/login/',
  path: '/login/',
  getParentRoute: () => rootRoute,
} as any);

const HomePageIndexRoute = HomePageIndexImport.update({
  id: '/homePage/',
  path: '/homePage/',
  getParentRoute: () => rootRoute,
} as any);

const GroupListIndexRoute = GroupListIndexImport.update({
  id: '/groupList/',
  path: '/groupList/',
  getParentRoute: () => rootRoute,
} as any);

const GroupDetailsOrganizationIdRoute = GroupDetailsOrganizationIdImport.update(
  {
    id: '/groupDetails/$organizationId',
    path: '/groupDetails/$organizationId',
    getParentRoute: () => rootRoute,
  } as any
);

const PlaylistDetailsPlaylistIdRoute = PlaylistDetailsPlaylistIdImport.update({
  id: '/PlaylistDetails/$playlistId',
  path: '/PlaylistDetails/$playlistId',
  getParentRoute: () => rootRoute,
} as any);

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/';
      path: '/';
      fullPath: '/';
      preLoaderRoute: typeof IndexImport;
      parentRoute: typeof rootRoute;
    };
    '/PlaylistDetails/$playlistId': {
      id: '/PlaylistDetails/$playlistId';
      path: '/PlaylistDetails/$playlistId';
      fullPath: '/PlaylistDetails/$playlistId';
      preLoaderRoute: typeof PlaylistDetailsPlaylistIdImport;
      parentRoute: typeof rootRoute;
    };
    '/groupDetails/$organizationId': {
      id: '/groupDetails/$organizationId';
      path: '/groupDetails/$organizationId';
      fullPath: '/groupDetails/$organizationId';
      preLoaderRoute: typeof GroupDetailsOrganizationIdImport;
      parentRoute: typeof rootRoute;
    };
    '/groupList/': {
      id: '/groupList/';
      path: '/groupList';
      fullPath: '/groupList';
      preLoaderRoute: typeof GroupListIndexImport;
      parentRoute: typeof rootRoute;
    };
    '/homePage/': {
      id: '/homePage/';
      path: '/homePage';
      fullPath: '/homePage';
      preLoaderRoute: typeof HomePageIndexImport;
      parentRoute: typeof rootRoute;
    };
    '/login/': {
      id: '/login/';
      path: '/login';
      fullPath: '/login';
      preLoaderRoute: typeof LoginIndexImport;
      parentRoute: typeof rootRoute;
    };
    '/onboarding/': {
      id: '/onboarding/';
      path: '/onboarding';
      fullPath: '/onboarding';
      preLoaderRoute: typeof OnboardingIndexImport;
      parentRoute: typeof rootRoute;
    };
    '/playlistList/': {
      id: '/playlistList/';
      path: '/playlistList';
      fullPath: '/playlistList';
      preLoaderRoute: typeof PlaylistListIndexImport;
      parentRoute: typeof rootRoute;
    };
    '/profile/': {
      id: '/profile/';
      path: '/profile';
      fullPath: '/profile';
      preLoaderRoute: typeof ProfileIndexImport;
      parentRoute: typeof rootRoute;
    };
    '/register/': {
      id: '/register/';
      path: '/register';
      fullPath: '/register';
      preLoaderRoute: typeof RegisterIndexImport;
      parentRoute: typeof rootRoute;
    };
  }
}

// Create and export the route tree

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute;
  '/PlaylistDetails/$playlistId': typeof PlaylistDetailsPlaylistIdRoute;
  '/groupDetails/$organizationId': typeof GroupDetailsOrganizationIdRoute;
  '/groupList': typeof GroupListIndexRoute;
  '/homePage': typeof HomePageIndexRoute;
  '/login': typeof LoginIndexRoute;
  '/onboarding': typeof OnboardingIndexRoute;
  '/playlistList': typeof PlaylistListIndexRoute;
  '/profile': typeof ProfileIndexRoute;
  '/register': typeof RegisterIndexRoute;
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute;
  '/PlaylistDetails/$playlistId': typeof PlaylistDetailsPlaylistIdRoute;
  '/groupDetails/$organizationId': typeof GroupDetailsOrganizationIdRoute;
  '/groupList': typeof GroupListIndexRoute;
  '/homePage': typeof HomePageIndexRoute;
  '/login': typeof LoginIndexRoute;
  '/onboarding': typeof OnboardingIndexRoute;
  '/playlistList': typeof PlaylistListIndexRoute;
  '/profile': typeof ProfileIndexRoute;
  '/register': typeof RegisterIndexRoute;
}

export interface FileRoutesById {
  __root__: typeof rootRoute;
  '/': typeof IndexRoute;
  '/PlaylistDetails/$playlistId': typeof PlaylistDetailsPlaylistIdRoute;
  '/groupDetails/$organizationId': typeof GroupDetailsOrganizationIdRoute;
  '/groupList/': typeof GroupListIndexRoute;
  '/homePage/': typeof HomePageIndexRoute;
  '/login/': typeof LoginIndexRoute;
  '/onboarding/': typeof OnboardingIndexRoute;
  '/playlistList/': typeof PlaylistListIndexRoute;
  '/profile/': typeof ProfileIndexRoute;
  '/register/': typeof RegisterIndexRoute;
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath;
  fullPaths:
    | '/'
    | '/PlaylistDetails/$playlistId'
    | '/groupDetails/$organizationId'
    | '/groupList'
    | '/homePage'
    | '/login'
    | '/onboarding'
    | '/playlistList'
    | '/profile'
    | '/register';
  fileRoutesByTo: FileRoutesByTo;
  to:
    | '/'
    | '/PlaylistDetails/$playlistId'
    | '/groupDetails/$organizationId'
    | '/groupList'
    | '/homePage'
    | '/login'
    | '/onboarding'
    | '/playlistList'
    | '/profile'
    | '/register';
  id:
    | '__root__'
    | '/'
    | '/PlaylistDetails/$playlistId'
    | '/groupDetails/$organizationId'
    | '/groupList/'
    | '/homePage/'
    | '/login/'
    | '/onboarding/'
    | '/playlistList/'
    | '/profile/'
    | '/register/';
  fileRoutesById: FileRoutesById;
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute;
  PlaylistDetailsPlaylistIdRoute: typeof PlaylistDetailsPlaylistIdRoute;
  GroupDetailsOrganizationIdRoute: typeof GroupDetailsOrganizationIdRoute;
  GroupListIndexRoute: typeof GroupListIndexRoute;
  HomePageIndexRoute: typeof HomePageIndexRoute;
  LoginIndexRoute: typeof LoginIndexRoute;
  OnboardingIndexRoute: typeof OnboardingIndexRoute;
  PlaylistListIndexRoute: typeof PlaylistListIndexRoute;
  ProfileIndexRoute: typeof ProfileIndexRoute;
  RegisterIndexRoute: typeof RegisterIndexRoute;
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  PlaylistDetailsPlaylistIdRoute: PlaylistDetailsPlaylistIdRoute,
  GroupDetailsOrganizationIdRoute: GroupDetailsOrganizationIdRoute,
  GroupListIndexRoute: GroupListIndexRoute,
  HomePageIndexRoute: HomePageIndexRoute,
  LoginIndexRoute: LoginIndexRoute,
  OnboardingIndexRoute: OnboardingIndexRoute,
  PlaylistListIndexRoute: PlaylistListIndexRoute,
  ProfileIndexRoute: ProfileIndexRoute,
  RegisterIndexRoute: RegisterIndexRoute,
};

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>();

/* prettier-ignore-end */

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/PlaylistDetails/$playlistId",
        "/groupDetails/$organizationId",
        "/groupList/",
        "/homePage/",
        "/login/",
        "/onboarding/",
        "/playlistList/",
        "/profile/",
        "/register/"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/PlaylistDetails/$playlistId": {
      "filePath": "PlaylistDetails/$playlistId.tsx"
    },
    "/groupDetails/$organizationId": {
      "filePath": "groupDetails/$organizationId.tsx"
    },
    "/groupList/": {
      "filePath": "groupList/index.tsx"
    },
    "/homePage/": {
      "filePath": "homePage/index.tsx"
    },
    "/login/": {
      "filePath": "login/index.tsx"
    },
    "/onboarding/": {
      "filePath": "onboarding/index.tsx"
    },
    "/playlistList/": {
      "filePath": "playlistList/index.tsx"
    },
    "/profile/": {
      "filePath": "profile/index.tsx"
    },
    "/register/": {
      "filePath": "register/index.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
